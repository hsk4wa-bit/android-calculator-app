name: 🚀 Build & Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    name: 📱 Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🐘 Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true
        
    - name: 🔑 Make gradlew executable
      run: chmod +x gradlew
      
    - name: 🧹 Clean project
      run: ./gradlew clean
      
    - name: 🔨 Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: 🔨 Build Release APK
      run: ./gradlew assembleRelease
      
    - name: 📋 Run Tests
      run: ./gradlew test
      
    - name: 📊 Run Lint
      run: ./gradlew lint
      
    - name: 📦 Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.sha }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: 📦 Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ github.sha }}
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90
        
    - name: 📊 Upload Lint Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results-${{ github.sha }}
        path: app/build/reports/lint-results*.html
        retention-days: 7

  code-quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🔑 Make gradlew executable
      run: chmod +x gradlew
      
    - name: 🔍 Run Detekt
      run: ./gradlew detekt
      
    - name: 📊 Upload Detekt Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: detekt-results-${{ github.sha }}
        path: app/build/reports/detekt/
        retention-days: 7

  notification:
    name: 📢 Build Notification
    runs-on: ubuntu-latest
    needs: [build, code-quality]
    if: always()
    
    steps:
    - name: ✅ Success Notification
      if: needs.build.result == 'success' && needs.code-quality.result == 'success'
      run: |
        echo "🎉 Build completed successfully!"
        echo "✅ APK files generated"
        echo "✅ All tests passed"
        echo "✅ Code quality checks passed"
        
    - name: ❌ Failure Notification
      if: needs.build.result == 'failure' || needs.code-quality.result == 'failure'
      run: |
        echo "❌ Build failed!"
        echo "Please check the logs for details"
        exit 1

name: 🔄 Pull Request Automation

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    # Run for PRs to any base branch

jobs:
  pr-validation:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: 📥 Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🐘 Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: 🔑 Make gradlew executable
      run: chmod +x gradlew
      
    - name: 🧹 Clean project
      run: ./gradlew clean
      
    - name: 🔨 Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: 📋 Run Unit Tests
      run: ./gradlew test
      
    - name: 📊 Run Lint Checks
      run: ./gradlew lint
      
    - name: 🔍 Run Detekt
      run: ./gradlew detekt
      
    - name: 📊 Generate Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: 🧪 Test Results
        path: '**/TEST-*.xml'
        reporter: java-junit
        
    - name: 📦 Upload Test APK
      uses: actions/upload-artifact@v4
      with:
        name: pr-apk-${{ github.event.pull_request.number }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7

  pr-size-check:
    name: 📏 PR Size Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📊 Check PR Size
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changes = additions + deletions;
          
          let size = 'small';
          let emoji = '🟢';
          
          if (changes > 500) {
            size = 'large';
            emoji = '🔴';
          } else if (changes > 200) {
            size = 'medium';
            emoji = '🟡';
          }
          
          const comment = `${emoji} **PR Size: ${size}**
          
          📊 **Changes Summary:**
          - ➕ **Additions:** ${additions} lines
          - ➖ **Deletions:** ${deletions} lines
          - 📝 **Total Changes:** ${changes} lines
          
          ${changes > 500 ? '⚠️ **Large PR detected!** Consider splitting into smaller PRs for easier review.' : ''}
          ${changes < 50 ? '✨ **Small PR** - Quick review expected!' : ''}`;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  pr-labels:
    name: 🏷️ Auto Label PR
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: 🏷️ Add Labels Based on Changes
      uses: actions/github-script@v7
      with:
        script: |
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
          });
          
          const labels = [];
          
          // Check file types and add appropriate labels
          const hasKotlin = files.some(file => file.filename.endsWith('.kt'));
          const hasXml = files.some(file => file.filename.endsWith('.xml'));
          const hasGradle = files.some(file => file.filename.includes('build.gradle'));
          const hasWorkflow = files.some(file => file.filename.includes('.github/workflows'));
          const hasReadme = files.some(file => file.filename.toLowerCase().includes('readme'));
          
          if (hasKotlin) labels.push('kotlin');
          if (hasXml) labels.push('ui');
          if (hasGradle) labels.push('build');
          if (hasWorkflow) labels.push('ci/cd');
          if (hasReadme) labels.push('documentation');
          
          // Add size label
          const totalChanges = files.reduce((sum, file) => sum + file.additions + file.deletions, 0);
          if (totalChanges > 500) labels.push('size/large');
          else if (totalChanges > 200) labels.push('size/medium');
          else labels.push('size/small');
          
          // Apply labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            });
          }

  pr-comment:
    name: 💬 PR Welcome Comment
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
    - name: 💬 Welcome Comment
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## 👋 Welcome to Calculator App!
          
          Thanks for contributing! 🎉
          
          ### 🔍 **Automated Checks Running:**
          - ✅ Build verification
          - 🧪 Unit tests
          - 📊 Code quality (Lint + Detekt)
          - 📏 PR size analysis
          
          ### 📱 **Testing Your Changes:**
          Once checks pass, a test APK will be available in the **Artifacts** section.
          
          ### 🚀 **What's Next:**
          1. Wait for all checks to pass ✅
          2. Request review from maintainers 👥
          3. Address any feedback 💭
          4. Celebrate when merged! 🎉
          
          ---
          *This comment was auto-generated by GitHub Actions* 🤖`;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
